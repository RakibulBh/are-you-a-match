{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///Users/rakibulb/Documents/ComputerScience/PortfolioProjects/Web/areyouamatch/web/components/Navbar.tsx"],"sourcesContent":["import Link from \"next/link\";\nimport React from \"react\";\nimport {\n  Heart,\n  Menu,\n  ChevronRight,\n  Home,\n  Settings,\n  Users,\n  Info,\n} from \"lucide-react\";\nimport { motion } from \"framer-motion\";\n\nconst Navbar = () => {\n  const navList = [\n    {\n      name: \"Home\",\n      href: \"/\",\n      icon: <Home size={16} />,\n    },\n    {\n      name: \"Features\",\n      href: \"/features\",\n      icon: <Settings size={16} />,\n    },\n    {\n      name: \"Pricing\",\n      href: \"/pricing\",\n      icon: <Users size={16} />,\n    },\n    {\n      name: \"About\",\n      href: \"/about\",\n      icon: <Info size={16} />,\n    },\n  ];\n\n  return (\n    <div className=\"absolute top-4 left-0 w-full flex justify-center z-50\">\n      <motion.nav\n        initial={{ y: -20, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        transition={{ duration: 0.5, ease: \"easeOut\" }}\n        className=\"bg-white shadow-lg rounded-full py-2 px-6 max-w-3xl w-full mx-4 backdrop-blur-sm bg-opacity-95\"\n      >\n        <div className=\"flex justify-between items-center\">\n          {/* Logo and title */}\n          <motion.div\n            initial={{ scale: 0.9 }}\n            animate={{ scale: 1 }}\n            transition={{ duration: 0.5 }}\n            className=\"flex items-center\"\n          >\n            <Heart className=\"text-orange-500 mr-1\" size={24} fill=\"#f97316\" />\n            <h1 className=\"text-xl font-bold\">\n              <Link href=\"/\" className=\"flex items-center\">\n                <span className=\"text-orange-500 font-poppins\">Are</span>\n                <span className=\"mx-1 font-inter\">You a</span>\n                <span className=\"text-orange-500 font-playfair\">Match?</span>\n              </Link>\n            </h1>\n          </motion.div>\n\n          {/* Navbar items */}\n          <div className=\"hidden md:flex items-center space-x-6\">\n            {navList.map((item, index) => (\n              <motion.div\n                key={index}\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n              >\n                <Link\n                  href={item.href}\n                  className=\"text-gray-700 font-medium hover:text-orange-500 transition-colors flex items-center gap-1 font-poppins text-sm\"\n                >\n                  {item.icon}\n                  <span>{item.name}</span>\n                </Link>\n              </motion.div>\n            ))}\n          </div>\n\n          {/* CTA Button */}\n          <div className=\"hidden md:block\">\n            <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n              <Link\n                href=\"/signup\"\n                className=\"bg-orange-500 hover:bg-orange-600 text-white px-5 py-2 rounded-full font-medium transition-all flex items-center gap-1 font-poppins\"\n              >\n                Get Started\n                <ChevronRight size={16} />\n              </Link>\n            </motion.div>\n          </div>\n\n          {/* Mobile menu button */}\n          <div className=\"md:hidden\">\n            <button className=\"text-gray-700\">\n              <Menu className=\"h-6 w-6\" />\n            </button>\n          </div>\n        </div>\n      </motion.nav>\n    </div>\n  );\n};\n\nexport default Navbar;\n"],"names":[],"mappings":";;;;AAAA;;;;;;;;;;;;;;;AAaA,MAAM,SAAS;IACb,MAAM,UAAU;QACd;YACE,MAAM;YACN,MAAM;YACN,oBAAM,8OAAC;gBAAK,MAAM;;;;;;QACpB;QACA;YACE,MAAM;YACN,MAAM;YACN,oBAAM,8OAAC;gBAAS,MAAM;;;;;;QACxB;QACA;YACE,MAAM;YACN,MAAM;YACN,oBAAM,8OAAC;gBAAM,MAAM;;;;;;QACrB;QACA;YACE,MAAM;YACN,MAAM;YACN,oBAAM,8OAAC;gBAAK,MAAM;;;;;;QACpB;KACD;IAED,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,OAAO,GAAG;YACT,SAAS;gBAAE,GAAG,CAAC;gBAAI,SAAS;YAAE;YAC9B,SAAS;gBAAE,GAAG;gBAAG,SAAS;YAAE;YAC5B,YAAY;gBAAE,UAAU;gBAAK,MAAM;YAAU;YAC7C,WAAU;sBAEV,cAAA,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC,OAAO,GAAG;wBACT,SAAS;4BAAE,OAAO;wBAAI;wBACtB,SAAS;4BAAE,OAAO;wBAAE;wBACpB,YAAY;4BAAE,UAAU;wBAAI;wBAC5B,WAAU;;0CAEV,8OAAC;gCAAM,WAAU;gCAAuB,MAAM;gCAAI,MAAK;;;;;;0CACvD,8OAAC;gCAAG,WAAU;0CACZ,cAAA,8OAAC,4JAAA,CAAA,UAAI;oCAAC,MAAK;oCAAI,WAAU;;sDACvB,8OAAC;4CAAK,WAAU;sDAA+B;;;;;;sDAC/C,8OAAC;4CAAK,WAAU;sDAAkB;;;;;;sDAClC,8OAAC;4CAAK,WAAU;sDAAgC;;;;;;;;;;;;;;;;;;;;;;;kCAMtD,8OAAC;wBAAI,WAAU;kCACZ,QAAQ,GAAG,CAAC,CAAC,MAAM,sBAClB,8OAAC,OAAO,GAAG;gCAET,YAAY;oCAAE,OAAO;gCAAK;gCAC1B,UAAU;oCAAE,OAAO;gCAAK;0CAExB,cAAA,8OAAC,4JAAA,CAAA,UAAI;oCACH,MAAM,KAAK,IAAI;oCACf,WAAU;;wCAET,KAAK,IAAI;sDACV,8OAAC;sDAAM,KAAK,IAAI;;;;;;;;;;;;+BATb;;;;;;;;;;kCAgBX,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,OAAO,GAAG;4BAAC,YAAY;gCAAE,OAAO;4BAAK;4BAAG,UAAU;gCAAE,OAAO;4BAAK;sCAC/D,cAAA,8OAAC,4JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAU;;oCACX;kDAEC,8OAAC;wCAAa,MAAM;;;;;;;;;;;;;;;;;;;;;;kCAM1B,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAO,WAAU;sCAChB,cAAA,8OAAC;gCAAK,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO9B;uCAEe","debugId":null}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":["file:///Users/rakibulb/Documents/ComputerScience/PortfolioProjects/Web/areyouamatch/web/app/page.tsx"],"sourcesContent":["import Navbar from \"@/components/Navbar\";\n\nexport default function Home() {\n  return (\n    <main className=\"min-h-screen bg-white\">\n      <Navbar />\n\n      {/* Hero Section */}\n      <section className=\"pt-32 pb-16 px-4 md:px-8 max-w-7xl mx-auto\">\n        <div className=\"flex flex-col md:flex-row items-center justify-between gap-12\">\n          <div className=\"max-w-2xl\">\n            <h1 className=\"text-5xl md:text-6xl font-bold text-gray-900 leading-tight\">\n              Find Your Perfect\n              <span className=\"text-orange-500 relative\">\n                Match\n                <svg\n                  className=\"absolute w-full -bottom-2 left-0\"\n                  viewBox=\"0 0 358 12\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M3 9.04938C65.3581 5.19969 127.716 3.59969 190.074 3.25937C239.469 2.99063 288.927 4.14688 338.129 8.99656C345.622 9.62312 353.178 9.99969 360.671 10.6262\"\n                    stroke=\"#FF6B00\"\n                    strokeWidth=\"5\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  />\n                </svg>\n              </span>\n            </h1>\n\n            <p className=\"mt-6 text-xl text-gray-600\">\n              Discover compatibility with potential partners through our\n              advanced matching algorithm. No more guessing - find real\n              connections based on values that matter.\n            </p>\n\n            <div className=\"mt-8 flex flex-col sm:flex-row gap-4\">\n              <button className=\"bg-orange-500 hover:bg-orange-600 text-white px-8 py-3 rounded-md font-medium transition-all shadow-lg shadow-orange-300/30 text-lg\">\n                Get Started Free\n              </button>\n              <button className=\"border-2 border-gray-300 hover:border-orange-500 px-8 py-3 rounded-md font-medium transition-all text-gray-800 hover:text-orange-500 text-lg\">\n                See How It Works\n              </button>\n            </div>\n\n            <div className=\"mt-8 flex items-center gap-2\">\n              <div className=\"flex -space-x-2\">\n                <img\n                  className=\"h-8 w-8 rounded-full border-2 border-white\"\n                  src=\"https://i.pravatar.cc/32?img=1\"\n                  alt=\"User\"\n                />\n                <img\n                  className=\"h-8 w-8 rounded-full border-2 border-white\"\n                  src=\"https://i.pravatar.cc/32?img=2\"\n                  alt=\"User\"\n                />\n                <img\n                  className=\"h-8 w-8 rounded-full border-2 border-white\"\n                  src=\"https://i.pravatar.cc/32?img=3\"\n                  alt=\"User\"\n                />\n              </div>\n              <p className=\"text-sm text-gray-600\">\n                <span className=\"font-semibold\">1,000+</span> matches made this\n                week\n              </p>\n            </div>\n          </div>\n\n          <div className=\"relative w-full md:w-2/5 h-80 bg-gradient-to-br from-orange-100 to-orange-50 rounded-2xl flex items-center justify-center\">\n            <div className=\"absolute -top-4 -right-4 w-20 h-20 bg-orange-500 rounded-full opacity-20\"></div>\n            <div className=\"absolute -bottom-6 -left-6 w-32 h-32 bg-orange-500 rounded-full opacity-20\"></div>\n            <p className=\"text-orange-500 font-medium\">\n              Hero image placeholder\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-16 px-4 md:px-8 max-w-7xl mx-auto\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900\">\n            Why People\n            <span className=\"text-orange-500 relative ml-2\">\n              Love Us\n              <svg\n                className=\"absolute w-full -bottom-2 left-0\"\n                viewBox=\"0 0 358 12\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M3 9.04938C65.3581 5.19969 127.716 3.59969 190.074 3.25937C239.469 2.99063 288.927 4.14688 338.129 8.99656C345.622 9.62312 353.178 9.99969 360.671 10.6262\"\n                  stroke=\"#FF6B00\"\n                  strokeWidth=\"5\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n            </span>\n          </h2>\n          <p className=\"mt-4 text-xl text-gray-600 max-w-3xl mx-auto\">\n            Our matching algorithm goes beyond superficial preferences to find\n            meaningful connections.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n          {[\n            {\n              title: \"Value-Based Matching\",\n              description:\n                \"Find partners who share your core values and life priorities.\",\n              icon: \"🎯\",\n            },\n            {\n              title: \"Scientifically Proven\",\n              description:\n                \"Our algorithm is built on relationship science and psychology.\",\n              icon: \"🧪\",\n            },\n            {\n              title: \"Privacy Focused\",\n              description:\n                \"Your personal information is always secure and protected.\",\n              icon: \"🔒\",\n            },\n          ].map((feature, index) => (\n            <div\n              key={index}\n              className=\"bg-white p-6 rounded-xl border border-gray-100 shadow-sm hover:shadow-md transition-all\"\n            >\n              <div className=\"text-3xl mb-4\">{feature.icon}</div>\n              <h3 className=\"text-xl font-semibold text-gray-900\">\n                {feature.title}\n              </h3>\n              <p className=\"mt-2 text-gray-600\">{feature.description}</p>\n            </div>\n          ))}\n        </div>\n      </section>\n\n      {/* Social Proof */}\n      <section className=\"py-16 px-4 md:px-8 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto text-center\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900\">\n            Trusted by\n            <span className=\"text-orange-500 relative ml-2\">\n              Thousands\n              <svg\n                className=\"absolute w-full -bottom-2 left-0\"\n                viewBox=\"0 0 358 12\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M3 9.04938C65.3581 5.19969 127.716 3.59969 190.074 3.25937C239.469 2.99063 288.927 4.14688 338.129 8.99656C345.622 9.62312 353.178 9.99969 360.671 10.6262\"\n                  stroke=\"#FF6B00\"\n                  strokeWidth=\"5\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n            </span>\n          </h2>\n\n          <div className=\"mt-12 flex flex-wrap justify-center gap-8 md:gap-16 opacity-80\">\n            {[1, 2, 3, 4, 5].map((i) => (\n              <div\n                key={i}\n                className=\"h-12 w-32 bg-gray-200 rounded flex items-center justify-center\"\n              >\n                <p className=\"text-gray-500 font-medium\">Logo {i}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Screenshot Section (placeholder) */}\n      <section className=\"py-24 px-4 md:px-8 max-w-7xl mx-auto\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900\">\n            See How It\n            <span className=\"text-orange-500 relative ml-2\">\n              Works\n              <svg\n                className=\"absolute w-full -bottom-2 left-0\"\n                viewBox=\"0 0 358 12\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M3 9.04938C65.3581 5.19969 127.716 3.59969 190.074 3.25937C239.469 2.99063 288.927 4.14688 338.129 8.99656C345.622 9.62312 353.178 9.99969 360.671 10.6262\"\n                  stroke=\"#FF6B00\"\n                  strokeWidth=\"5\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n            </span>\n          </h2>\n          <p className=\"mt-4 text-xl text-gray-600 max-w-3xl mx-auto\">\n            Our platform makes it easy to find your perfect match.\n          </p>\n        </div>\n\n        <div className=\"h-96 bg-gradient-to-br from-orange-50 to-gray-50 rounded-xl flex items-center justify-center border border-gray-100\">\n          <p className=\"text-orange-500 font-medium\">\n            Screenshot will be placed here\n          </p>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-16 px-4 md:px-8 bg-orange-500\">\n        <div className=\"max-w-5xl mx-auto text-center\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-white\">\n            Ready to find your perfect match?\n          </h2>\n          <p className=\"mt-4 text-xl text-orange-50\">\n            Join thousands of people who have found meaningful connections.\n          </p>\n          <button className=\"mt-8 bg-white text-orange-500 px-8 py-3 rounded-md font-medium text-lg hover:bg-orange-50 transition-all\">\n            Get Started Free\n          </button>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <footer className=\"py-8 px-4 md:px-8 border-t border-gray-100\">\n        <div className=\"max-w-7xl mx-auto flex flex-col md:flex-row justify-between items-center\">\n          <p className=\"text-gray-600\">\n            © 2023 Are You a Match. All rights reserved.\n          </p>\n          <div className=\"flex gap-6 mt-4 md:mt-0\">\n            <a href=\"#\" className=\"text-gray-600 hover:text-orange-500\">\n              Terms\n            </a>\n            <a href=\"#\" className=\"text-gray-600 hover:text-orange-500\">\n              Privacy\n            </a>\n            <a href=\"#\" className=\"text-gray-600 hover:text-orange-500\">\n              Contact\n            </a>\n          </div>\n        </div>\n      </footer>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 939, "column": 0}, "map": {"version":3,"sources":["file:///Users/rakibulb/Documents/ComputerScience/PortfolioProjects/Web/areyouamatch/web/node_modules/next/dist/client/app-dir/link.js/proxy.cjs"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server.edge\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/next/dist/client/app-dir/link.js <module evaluation>\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE;AAEjC,sBAAsB,CAAC,CAAC,wBAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 946, "column": 0}, "map": {"version":3,"sources":["file:///Users/rakibulb/Documents/ComputerScience/PortfolioProjects/Web/areyouamatch/web/node_modules/next/dist/client/app-dir/link.js/proxy.cjs"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server.edge\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/next/dist/client/app-dir/link.js\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE;AAEjC,sBAAsB,CAAC,CAAC,wBAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 954, "column": 0}, "map": {"version":3,"sources":["file:///Users/rakibulb/Documents/ComputerScience/PortfolioProjects/Web/areyouamatch/web/node_modules/next/src/client/app-dir/link.tsx"],"sourcesContent":["'use client'\n\nimport React, { createContext, useContext, useOptimistic, useRef } from 'react'\nimport type { UrlObject } from 'url'\nimport { formatUrl } from '../../shared/lib/router/utils/format-url'\nimport { AppRouterContext } from '../../shared/lib/app-router-context.shared-runtime'\nimport { PrefetchKind } from '../components/router-reducer/router-reducer-types'\nimport { useMergedRef } from '../use-merged-ref'\nimport { isAbsoluteUrl } from '../../shared/lib/utils'\nimport { addBasePath } from '../add-base-path'\nimport { warnOnce } from '../../shared/lib/utils/warn-once'\nimport type { PENDING_LINK_STATUS } from '../components/links'\nimport {\n  IDLE_LINK_STATUS,\n  mountLinkInstance,\n  onNavigationIntent,\n  unmountLinkForCurrentNavigation,\n  unmountPrefetchableInstance,\n  type LinkInstance,\n} from '../components/links'\nimport { isLocalURL } from '../../shared/lib/router/utils/is-local-url'\nimport { dispatchNavigateAction } from '../components/app-router-instance'\nimport { errorOnce } from '../../shared/lib/utils/error-once'\n\ntype Url = string | UrlObject\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K\n}[keyof T]\ntype OptionalKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? K : never\n}[keyof T]\n\ntype OnNavigateEventHandler = (event: { preventDefault: () => void }) => void\n\ntype InternalLinkProps = {\n  /**\n   * **Required**. The path or URL to navigate to. It can also be an object (similar to `URL`).\n   *\n   * @example\n   * ```tsx\n   * // Navigate to /dashboard:\n   * <Link href=\"/dashboard\">Dashboard</Link>\n   *\n   * // Navigate to /about?name=test:\n   * <Link href={{ pathname: '/about', query: { name: 'test' } }}>\n   *   About\n   * </Link>\n   * ```\n   *\n   * @remarks\n   * - For external URLs, use a fully qualified URL such as `https://...`.\n   * - In the App Router, dynamic routes must not include bracketed segments in `href`.\n   */\n  href: Url\n\n  /**\n   * @deprecated v10.0.0: `href` props pointing to a dynamic route are\n   * automatically resolved and no longer require the `as` prop.\n   */\n  as?: Url\n\n  /**\n   * Replace the current `history` state instead of adding a new URL into the stack.\n   *\n   * @defaultValue `false`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/about\" replace>\n   *   About (replaces the history state)\n   * </Link>\n   * ```\n   */\n  replace?: boolean\n\n  /**\n   * Whether to override the default scroll behavior. If `true`, Next.js attempts to maintain\n   * the scroll position if the newly navigated page is still visible. If not, it scrolls to the top.\n   *\n   * If `false`, Next.js will not modify the scroll behavior at all.\n   *\n   * @defaultValue `true`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/dashboard\" scroll={false}>\n   *   No auto scroll\n   * </Link>\n   * ```\n   */\n  scroll?: boolean\n\n  /**\n   * Update the path of the current page without rerunning data fetching methods\n   * like `getStaticProps`, `getServerSideProps`, or `getInitialProps`.\n   *\n   * @remarks\n   * `shallow` only applies to the Pages Router. For the App Router, see the\n   * [following documentation](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#using-the-native-history-api).\n   *\n   * @defaultValue `false`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/blog\" shallow>\n   *   Shallow navigation\n   * </Link>\n   * ```\n   */\n  shallow?: boolean\n\n  /**\n   * Forces `Link` to pass its `href` to the child component. Useful if the child is a custom\n   * component that wraps an `<a>` tag, or if you're using certain styling libraries.\n   *\n   * @defaultValue `false`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/dashboard\" passHref>\n   *   <MyStyledAnchor>Dashboard</MyStyledAnchor>\n   * </Link>\n   * ```\n   */\n  passHref?: boolean\n\n  /**\n   * Prefetch the page in the background.\n   * Any `<Link />` that is in the viewport (initially or through scroll) will be prefetched.\n   * Prefetch can be disabled by passing `prefetch={false}`.\n   *\n   * @remarks\n   * Prefetching is only enabled in production.\n   *\n   * - In the **App Router**:\n   *   - `null` (default): Prefetch behavior depends on static vs dynamic routes:\n   *     - Static routes: fully prefetched\n   *     - Dynamic routes: partial prefetch to the nearest segment with a `loading.js`\n   *   - `true`: Always prefetch the full route and data.\n   *   - `false`: Disable prefetching on both viewport and hover.\n   * - In the **Pages Router**:\n   *   - `true` (default): Prefetches the route and data in the background on viewport or hover.\n   *   - `false`: Prefetch only on hover, not on viewport.\n   *\n   * @defaultValue `true` (Pages Router) or `null` (App Router)\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/dashboard\" prefetch={false}>\n   *   Dashboard\n   * </Link>\n   * ```\n   */\n  prefetch?: boolean | null\n\n  /**\n   * (unstable) Switch to a dynamic prefetch on hover. Effectively the same as\n   * updating the prefetch prop to `true` in a mouse event.\n   */\n  unstable_dynamicOnHover?: boolean\n\n  /**\n   * The active locale is automatically prepended in the Pages Router. `locale` allows for providing\n   * a different locale, or can be set to `false` to opt out of automatic locale behavior.\n   *\n   * @remarks\n   * Note: locale only applies in the Pages Router and is ignored in the App Router.\n   *\n   * @example\n   * ```tsx\n   * // Use the 'fr' locale:\n   * <Link href=\"/about\" locale=\"fr\">\n   *   About (French)\n   * </Link>\n   *\n   * // Disable locale prefix:\n   * <Link href=\"/about\" locale={false}>\n   *   About (no locale prefix)\n   * </Link>\n   * ```\n   */\n  locale?: string | false\n\n  /**\n   * Enable legacy link behavior, requiring an `<a>` tag to wrap the child content\n   * if the child is a string or number.\n   *\n   * @deprecated This will be removed in v16\n   * @defaultValue `false`\n   * @see https://github.com/vercel/next.js/commit/489e65ed98544e69b0afd7e0cfc3f9f6c2b803b7\n   */\n  legacyBehavior?: boolean\n\n  /**\n   * Optional event handler for when the mouse pointer is moved onto the `<Link>`.\n   */\n  onMouseEnter?: React.MouseEventHandler<HTMLAnchorElement>\n\n  /**\n   * Optional event handler for when the `<Link>` is touched.\n   */\n  onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n\n  /**\n   * Optional event handler for when the `<Link>` is clicked.\n   */\n  onClick?: React.MouseEventHandler<HTMLAnchorElement>\n\n  /**\n   * Optional event handler for when the `<Link>` is navigated.\n   */\n  onNavigate?: OnNavigateEventHandler\n}\n\n// TODO-APP: Include the full set of Anchor props\n// adding this to the publicly exported type currently breaks existing apps\n\n// `RouteInferType` is a stub here to avoid breaking `typedRoutes` when the type\n// isn't generated yet. It will be replaced when the webpack plugin runs.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport type LinkProps<RouteInferType = any> = InternalLinkProps\ntype LinkPropsRequired = RequiredKeys<LinkProps>\ntype LinkPropsOptional = OptionalKeys<Omit<InternalLinkProps, 'locale'>>\n\nfunction isModifiedEvent(event: React.MouseEvent): boolean {\n  const eventTarget = event.currentTarget as HTMLAnchorElement | SVGAElement\n  const target = eventTarget.getAttribute('target')\n  return (\n    (target && target !== '_self') ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey || // triggers resource download\n    (event.nativeEvent && event.nativeEvent.which === 2)\n  )\n}\n\nfunction linkClicked(\n  e: React.MouseEvent,\n  href: string,\n  as: string,\n  linkInstanceRef: React.RefObject<LinkInstance | null>,\n  replace?: boolean,\n  scroll?: boolean,\n  onNavigate?: OnNavigateEventHandler\n): void {\n  const { nodeName } = e.currentTarget\n\n  // anchors inside an svg have a lowercase nodeName\n  const isAnchorNodeName = nodeName.toUpperCase() === 'A'\n\n  if (\n    (isAnchorNodeName && isModifiedEvent(e)) ||\n    e.currentTarget.hasAttribute('download')\n  ) {\n    // ignore click for browser’s default behavior\n    return\n  }\n\n  if (!isLocalURL(href)) {\n    if (replace) {\n      // browser default behavior does not replace the history state\n      // so we need to do it manually\n      e.preventDefault()\n      location.replace(href)\n    }\n\n    // ignore click for browser’s default behavior\n    return\n  }\n\n  e.preventDefault()\n\n  const navigate = () => {\n    if (onNavigate) {\n      let isDefaultPrevented = false\n\n      onNavigate({\n        preventDefault: () => {\n          isDefaultPrevented = true\n        },\n      })\n\n      if (isDefaultPrevented) {\n        return\n      }\n    }\n\n    dispatchNavigateAction(\n      as || href,\n      replace ? 'replace' : 'push',\n      scroll ?? true,\n      linkInstanceRef.current\n    )\n  }\n\n  React.startTransition(navigate)\n}\n\nfunction formatStringOrUrl(urlObjOrString: UrlObject | string): string {\n  if (typeof urlObjOrString === 'string') {\n    return urlObjOrString\n  }\n\n  return formatUrl(urlObjOrString)\n}\n\n/**\n * A React component that extends the HTML `<a>` element to provide\n * [prefetching](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#2-prefetching)\n * and client-side navigation. This is the primary way to navigate between routes in Next.js.\n *\n * @remarks\n * - Prefetching is only enabled in production.\n *\n * @see https://nextjs.org/docs/app/api-reference/components/link\n */\nexport default function LinkComponent(\n  props: LinkProps & {\n    children: React.ReactNode\n    ref: React.Ref<HTMLAnchorElement>\n  }\n) {\n  const [linkStatus, setOptimisticLinkStatus] = useOptimistic(IDLE_LINK_STATUS)\n\n  let children: React.ReactNode\n\n  const linkInstanceRef = useRef<LinkInstance | null>(null)\n\n  const {\n    href: hrefProp,\n    as: asProp,\n    children: childrenProp,\n    prefetch: prefetchProp = null,\n    passHref,\n    replace,\n    shallow,\n    scroll,\n    onClick,\n    onMouseEnter: onMouseEnterProp,\n    onTouchStart: onTouchStartProp,\n    legacyBehavior = false,\n    onNavigate,\n    ref: forwardedRef,\n    unstable_dynamicOnHover,\n    ...restProps\n  } = props\n\n  children = childrenProp\n\n  if (\n    legacyBehavior &&\n    (typeof children === 'string' || typeof children === 'number')\n  ) {\n    children = <a>{children}</a>\n  }\n\n  const router = React.useContext(AppRouterContext)\n\n  const prefetchEnabled = prefetchProp !== false\n  /**\n   * The possible states for prefetch are:\n   * - null: this is the default \"auto\" mode, where we will prefetch partially if the link is in the viewport\n   * - true: we will prefetch if the link is visible and prefetch the full page, not just partially\n   * - false: we will not prefetch if in the viewport at all\n   * - 'unstable_dynamicOnHover': this starts in \"auto\" mode, but switches to \"full\" when the link is hovered\n   */\n  const appPrefetchKind =\n    prefetchProp === null ? PrefetchKind.AUTO : PrefetchKind.FULL\n\n  if (process.env.NODE_ENV !== 'production') {\n    function createPropError(args: {\n      key: string\n      expected: string\n      actual: string\n    }) {\n      return new Error(\n        `Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` +\n          (typeof window !== 'undefined'\n            ? \"\\nOpen your browser's console to view the Component stack trace.\"\n            : '')\n      )\n    }\n\n    // TypeScript trick for type-guarding:\n    const requiredPropsGuard: Record<LinkPropsRequired, true> = {\n      href: true,\n    } as const\n    const requiredProps: LinkPropsRequired[] = Object.keys(\n      requiredPropsGuard\n    ) as LinkPropsRequired[]\n    requiredProps.forEach((key: LinkPropsRequired) => {\n      if (key === 'href') {\n        if (\n          props[key] == null ||\n          (typeof props[key] !== 'string' && typeof props[key] !== 'object')\n        ) {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: props[key] === null ? 'null' : typeof props[key],\n          })\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _: never = key\n      }\n    })\n\n    // TypeScript trick for type-guarding:\n    const optionalPropsGuard: Record<LinkPropsOptional, true> = {\n      as: true,\n      replace: true,\n      scroll: true,\n      shallow: true,\n      passHref: true,\n      prefetch: true,\n      unstable_dynamicOnHover: true,\n      onClick: true,\n      onMouseEnter: true,\n      onTouchStart: true,\n      legacyBehavior: true,\n      onNavigate: true,\n    } as const\n    const optionalProps: LinkPropsOptional[] = Object.keys(\n      optionalPropsGuard\n    ) as LinkPropsOptional[]\n    optionalProps.forEach((key: LinkPropsOptional) => {\n      const valType = typeof props[key]\n\n      if (key === 'as') {\n        if (props[key] && valType !== 'string' && valType !== 'object') {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: valType,\n          })\n        }\n      } else if (\n        key === 'onClick' ||\n        key === 'onMouseEnter' ||\n        key === 'onTouchStart' ||\n        key === 'onNavigate'\n      ) {\n        if (props[key] && valType !== 'function') {\n          throw createPropError({\n            key,\n            expected: '`function`',\n            actual: valType,\n          })\n        }\n      } else if (\n        key === 'replace' ||\n        key === 'scroll' ||\n        key === 'shallow' ||\n        key === 'passHref' ||\n        key === 'prefetch' ||\n        key === 'legacyBehavior' ||\n        key === 'unstable_dynamicOnHover'\n      ) {\n        if (props[key] != null && valType !== 'boolean') {\n          throw createPropError({\n            key,\n            expected: '`boolean`',\n            actual: valType,\n          })\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _: never = key\n      }\n    })\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (props.locale) {\n      warnOnce(\n        'The `locale` prop is not supported in `next/link` while using the `app` router. Read more about app router internalization: https://nextjs.org/docs/app/building-your-application/routing/internationalization'\n      )\n    }\n    if (!asProp) {\n      let href: string | undefined\n      if (typeof hrefProp === 'string') {\n        href = hrefProp\n      } else if (\n        typeof hrefProp === 'object' &&\n        typeof hrefProp.pathname === 'string'\n      ) {\n        href = hrefProp.pathname\n      }\n\n      if (href) {\n        const hasDynamicSegment = href\n          .split('/')\n          .some((segment) => segment.startsWith('[') && segment.endsWith(']'))\n\n        if (hasDynamicSegment) {\n          throw new Error(\n            `Dynamic href \\`${href}\\` found in <Link> while using the \\`/app\\` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href`\n          )\n        }\n      }\n    }\n  }\n\n  const { href, as } = React.useMemo(() => {\n    const resolvedHref = formatStringOrUrl(hrefProp)\n    return {\n      href: resolvedHref,\n      as: asProp ? formatStringOrUrl(asProp) : resolvedHref,\n    }\n  }, [hrefProp, asProp])\n\n  // This will return the first child, if multiple are provided it will throw an error\n  let child: any\n  if (legacyBehavior) {\n    if (process.env.NODE_ENV === 'development') {\n      if (onClick) {\n        console.warn(\n          `\"onClick\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link`\n        )\n      }\n      if (onMouseEnterProp) {\n        console.warn(\n          `\"onMouseEnter\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link`\n        )\n      }\n      try {\n        child = React.Children.only(children)\n      } catch (err) {\n        if (!children) {\n          throw new Error(\n            `No children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but one child is required https://nextjs.org/docs/messages/link-no-children`\n          )\n        }\n        throw new Error(\n          `Multiple children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` +\n            (typeof window !== 'undefined'\n              ? \" \\nOpen your browser's console to view the Component stack trace.\"\n              : '')\n        )\n      }\n    } else {\n      child = React.Children.only(children)\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if ((children as any)?.type === 'a') {\n        throw new Error(\n          'Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor'\n        )\n      }\n    }\n  }\n\n  const childRef: any = legacyBehavior\n    ? child && typeof child === 'object' && child.ref\n    : forwardedRef\n\n  // Use a callback ref to attach an IntersectionObserver to the anchor tag on\n  // mount. In the future we will also use this to keep track of all the\n  // currently mounted <Link> instances, e.g. so we can re-prefetch them after\n  // a revalidation or refresh.\n  const observeLinkVisibilityOnMount = React.useCallback(\n    (element: HTMLAnchorElement | SVGAElement) => {\n      if (router !== null) {\n        linkInstanceRef.current = mountLinkInstance(\n          element,\n          href,\n          router,\n          appPrefetchKind,\n          prefetchEnabled,\n          setOptimisticLinkStatus\n        )\n      }\n\n      return () => {\n        if (linkInstanceRef.current) {\n          unmountLinkForCurrentNavigation(linkInstanceRef.current)\n          linkInstanceRef.current = null\n        }\n        unmountPrefetchableInstance(element)\n      }\n    },\n    [prefetchEnabled, href, router, appPrefetchKind, setOptimisticLinkStatus]\n  )\n\n  const mergedRef = useMergedRef(observeLinkVisibilityOnMount, childRef)\n\n  const childProps: {\n    onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n    onMouseEnter: React.MouseEventHandler<HTMLAnchorElement>\n    onClick: React.MouseEventHandler<HTMLAnchorElement>\n    href?: string\n    ref?: any\n  } = {\n    ref: mergedRef,\n    onClick(e) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!e) {\n          throw new Error(\n            `Component rendered inside next/link has to pass click event to \"onClick\" prop.`\n          )\n        }\n      }\n\n      if (!legacyBehavior && typeof onClick === 'function') {\n        onClick(e)\n      }\n\n      if (\n        legacyBehavior &&\n        child.props &&\n        typeof child.props.onClick === 'function'\n      ) {\n        child.props.onClick(e)\n      }\n\n      if (!router) {\n        return\n      }\n\n      if (e.defaultPrevented) {\n        return\n      }\n\n      linkClicked(e, href, as, linkInstanceRef, replace, scroll, onNavigate)\n    },\n    onMouseEnter(e) {\n      if (!legacyBehavior && typeof onMouseEnterProp === 'function') {\n        onMouseEnterProp(e)\n      }\n\n      if (\n        legacyBehavior &&\n        child.props &&\n        typeof child.props.onMouseEnter === 'function'\n      ) {\n        child.props.onMouseEnter(e)\n      }\n\n      if (!router) {\n        return\n      }\n\n      if (!prefetchEnabled || process.env.NODE_ENV === 'development') {\n        return\n      }\n\n      const upgradeToDynamicPrefetch = unstable_dynamicOnHover === true\n      onNavigationIntent(\n        e.currentTarget as HTMLAnchorElement | SVGAElement,\n        upgradeToDynamicPrefetch\n      )\n    },\n    onTouchStart: process.env.__NEXT_LINK_NO_TOUCH_START\n      ? undefined\n      : function onTouchStart(e) {\n          if (!legacyBehavior && typeof onTouchStartProp === 'function') {\n            onTouchStartProp(e)\n          }\n\n          if (\n            legacyBehavior &&\n            child.props &&\n            typeof child.props.onTouchStart === 'function'\n          ) {\n            child.props.onTouchStart(e)\n          }\n\n          if (!router) {\n            return\n          }\n\n          if (!prefetchEnabled) {\n            return\n          }\n\n          const upgradeToDynamicPrefetch = unstable_dynamicOnHover === true\n          onNavigationIntent(\n            e.currentTarget as HTMLAnchorElement | SVGAElement,\n            upgradeToDynamicPrefetch\n          )\n        },\n  }\n\n  // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n  // defined, we specify the current 'href', so that repetition is not needed by the user.\n  // If the url is absolute, we can bypass the logic to prepend the basePath.\n  if (isAbsoluteUrl(as)) {\n    childProps.href = as\n  } else if (\n    !legacyBehavior ||\n    passHref ||\n    (child.type === 'a' && !('href' in child.props))\n  ) {\n    childProps.href = addBasePath(as)\n  }\n\n  let link: React.ReactNode\n\n  if (legacyBehavior) {\n    if (process.env.NODE_ENV === 'development') {\n      errorOnce(\n        '`legacyBehavior` is deprecated and will be removed in a future ' +\n          'release. A codemod is available to upgrade your components:\\n\\n' +\n          'npx @next/codemod@latest new-link .\\n\\n' +\n          'Learn more: https://nextjs.org/docs/app/building-your-application/upgrading/codemods#remove-a-tags-from-link-components'\n      )\n    }\n    link = React.cloneElement(child, childProps)\n  } else {\n    link = (\n      <a {...restProps} {...childProps}>\n        {children}\n      </a>\n    )\n  }\n\n  return (\n    <LinkStatusContext.Provider value={linkStatus}>\n      {link}\n    </LinkStatusContext.Provider>\n  )\n}\n\nconst LinkStatusContext = createContext<\n  typeof PENDING_LINK_STATUS | typeof IDLE_LINK_STATUS\n>(IDLE_LINK_STATUS)\n\nexport const useLinkStatus = () => {\n  return useContext(LinkStatusContext)\n}\n"],"names":["LinkComponent","useLinkStatus","isModifiedEvent","event","eventTarget","currentTarget","target","getAttribute","metaKey","ctrlKey","shiftKey","altKey","nativeEvent","which","linkClicked","e","href","as","linkInstanceRef","replace","scroll","onNavigate","nodeName","isAnchorNodeName","toUpperCase","hasAttribute","isLocalURL","preventDefault","location","navigate","isDefaultPrevented","dispatchNavigateAction","current","React","startTransition","formatStringOrUrl","urlObjOrString","formatUrl","props","linkStatus","setOptimisticLinkStatus","useOptimistic","IDLE_LINK_STATUS","children","useRef","hrefProp","asProp","childrenProp","prefetch","prefetchProp","passHref","shallow","onClick","onMouseEnter","onMouseEnterProp","onTouchStart","onTouchStartProp","legacyBehavior","ref","forwardedRef","unstable_dynamicOnHover","restProps","a","router","useContext","AppRouterContext","prefetchEnabled","appPrefetchKind","PrefetchKind","AUTO","FULL","process","env","NODE_ENV","createPropError","args","Error","key","expected","actual","window","requiredPropsGuard","requiredProps","Object","keys","forEach","_","optionalPropsGuard","optionalProps","valType","locale","warnOnce","pathname","hasDynamicSegment","split","some","segment","startsWith","endsWith","useMemo","resolvedHref","child","console","warn","Children","only","err","type","childRef","observeLinkVisibilityOnMount","useCallback","element","mountLinkInstance","unmountLinkForCurrentNavigation","unmountPrefetchableInstance","mergedRef","useMergedRef","childProps","defaultPrevented","upgradeToDynamicPrefetch","onNavigationIntent","__NEXT_LINK_NO_TOUCH_START","undefined","isAbsoluteUrl","addBasePath","link","errorOnce","cloneElement","LinkStatusContext","Provider","value","createContext"],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 963, "column": 0}, "map": {"version":3,"sources":["file:///Users/rakibulb/Documents/ComputerScience/PortfolioProjects/Web/areyouamatch/web/node_modules/next/dist/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1001, "column": 0}, "map": {"version":3,"sources":["file:///Users/rakibulb/Documents/ComputerScience/PortfolioProjects/Web/areyouamatch/web/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: (id: string | number) => unknown\ndeclare const __next_app_load_chunk__: (id: string | number) => Promise<unknown>\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base' with { 'turbopack-transition': 'next-server-utility' }\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AACA,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;IACzE,wBAAwB;AAWnF,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;IAEkD,wBAAwB;AAOhG,iCAAiC;;;;;;;;;;;;IAI/BM,WAAWC,0DAAAA;AACb,EAAC,QAAA;AAED,MAAA,OAAA;IAAc;IAAA,sCAA0C;YAAE,QAAA;YAAA;YAAA,CAA8C,EAAtB,AAAuB;YAAA;gBAEzG,UAAA,CAAA;gBAAA,QAAA;oBAAA,IAAA,0BAA4D;oBAAA;iBAAA;YAC5D;SAAA,KAAO,MAAMC,cAAc,IAAIX,mBAAmB;;KAChDY,YAAY;cACVC,IAAAA,EAAMZ;YAAAA,MAAAA,CAAUa,QAAQ;iBACxBC,MAAM,QAAA;wBAAA;4BACNC,KAAAA,CAAAA,GAAAA,4MAAAA,CAAAA,KAAU,iBAAA,EAAA,MAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,+RAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACV,OAAA,GAAA,+RAAA,CAAA,UAAA,CAAA,KAAA,CAA2C,CAAA,EAAA,+RAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BAC3CC,MAAAA,CAAAA,KAAY,OAAA,CAAA;;qBACZC,UAAU;gBACVC,UAAU,EAAE;UACd;QAAA,UAAA;YAAA,IAAA;YAAA;SAAA;UACAC,UAAU,CAAA;YAAA,IAAA;YAAA;SAAA;cACRC,OAAAA;YAAAA,IAAYnB;YAAAA;SAAAA;UACd,cAAA;YAAA,IAAA;YAAA;SAAA;IACF;CAAA,CAAE","ignoreList":[0],"debugId":null}}]
}